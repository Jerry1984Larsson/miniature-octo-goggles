<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Thrymheim Web</title>
    <link href="https://github.com/Jerry1984Larsson/miniature-octo-goggles/feed.xml" rel="self" />
    <link href="https://github.com/Jerry1984Larsson/miniature-octo-goggles" />
    <updated>2022-08-13T15:13:29+02:00</updated>
    <author>
        <name>Larsson</name>
    </author>
    <id>https://github.com/Jerry1984Larsson/miniature-octo-goggles</id>

    <entry>
        <title># Index</title>
        <author>
            <name>Larsson</name>
        </author>
        <link href="https://github.com/Jerry1984Larsson/miniature-octo-goggles/index/"/>
        <id>https://github.com/Jerry1984Larsson/miniature-octo-goggles/index/</id>

        <updated>2022-08-13T15:13:29+02:00</updated>
            <summary>
                <![CDATA[
                    “page1” “page2”
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <ul>
<li><a href="docs/post1">“page1”</a></li>
<li><a href="docs/post2">“page2”</a></li>
</ul>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Misc Notes</title>
        <author>
            <name>Larsson</name>
        </author>
        <link href="https://github.com/Jerry1984Larsson/miniature-octo-goggles/misc-notes/"/>
        <id>https://github.com/Jerry1984Larsson/miniature-octo-goggles/misc-notes/</id>

        <updated>2022-08-13T14:56:01+02:00</updated>
            <summary>
                <![CDATA[
                    tags: #Icon [[icon.md]] Here&#39;s the similar method I&#39;ve been using for years which has been working great for clearing the cache manually, without restarting the system. Manually Clear Icon &amp; Thumbnail Cache : Run the &quot;Command Prompt&quot; as administrator (in the [Search box], type &quot;cmd&quot;). Paste each command&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <hr>
<p>tags:</p>
<ul>
<li>Misc</li>
<li>Notes</li>
</ul>
<hr>
<h1 id="misc-notes">Misc Notes</h1>
<h2 id="220628">220628</h2>
<ul>
<li>sachiowo</li>
<li>senzawa
@sensenzawa</li>
<li>JAV Titles
@JAVdottxt</li>
<li>Shachimu</li>
</ul>
<p>#Icon</p>
<p>[[icon.md]]</p>
<h2 id="rebuild-icon-cache---oldschool">Rebuild Icon Cache - Oldschool</h2>
<pre><code class="language-md">Here&#39;s the similar method I&#39;ve been using for years which has been working great for clearing the cache manually, without restarting the system.

Manually Clear Icon &amp; Thumbnail Cache :

Run the &quot;Command Prompt&quot; as administrator (in the [Search box], type &quot;cmd&quot;).
Paste each command line -separately- and validate with [Enter] except the last one.
Code:
cd /d %userprofile%\AppData\Local\Microsoft\Windows\Explorer
attrib –h iconcache*\*.db
del iconcache*\_.db
You will have to end the Windows Explorer process before validating this last command.
Make sure all File Explorer windows are closed, and open the &quot;Task Manager&quot; by pressing [Ctrl+Shift+Esc] simultaneously.
Scroll down the list until you reach all [Windows Explorer] process.
Select it/them, right-click and choose [End Task] : &quot;It&#39;s going to be all dark!&quot;
Close the &quot;Task Manager&quot;.
Now validate the last del iconcache\_\_.db command, then close the &quot;Command Prompt&quot; window.
Access the &quot;Task Manager&quot; again with [Ctrl+Shift+Esc] keys, click on [File], [Run new task] then type &quot;explorer.exe&quot; and [Enter].
Light&#39;s back on ! Close the &quot;Task Manager&quot;.

System icons are updated, but I&#39;m not sure it includes the full windows app icons.
Most 3rd party apps seem to have their own icon cache file stored separately, and not necessarily next to their .exe file.
</code></pre>
<p>——————————–REGEX———————-
Remove after char: <code>(?-s)(?&lt;=\&lt;char&gt;).*</code></p>
<p><code>Get-AppxPackage -Name &quot;*media*&quot; -AllUsers | Remove-AppxPackage -AllUsers</code></p>
<p><code>Get-AppxPackage *WindowsStore* -AllUsers | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register $($_.InstallLocation)\AppXManifest.xml}</code></p>
<p><code>unblock-file -path &quot;full path of blocked file&quot;</code></p>
<p><code>get-childitem &quot;full path of folder&quot; | unblock-file</code></p>
<hr>
<h2 id="remove-special-chars">Remove special chars</h2>
<blockquote>
<p>koikatu0060555（椎名_紅葉）（作者：みそおでん）.png</p>
</blockquote>
<p>Using preg replace:</p>
<p><code>$target_file = $target_dir . preg_replace(&quot;/[^a-z0-9\_\-\.]/i&quot;, &#39;&#39;, basename($_FILES[&#39;fileToUpload&#39;][&quot;name&quot;]));</code>
This will remove all characters that’s not a letter (a-z), a number (0-9) or a dash, underscore or dot (we want to keep the file extension). The i flag in the end makes the match case insensitive.</p>
<p><strong>Update</strong>
To make the expression shorter, you can replace <code>a-z0-9\_-part</code> with the word token <code>\w</code>.
The pattern would then be: <code>[^\w\-\.]</code>. Here we don’t need the i flag, since the word token handles that for us.</p>
<pre><code class="language-powershell">Get-ChildItem -Path C:\Users\jdoe\Desktop\test *.txt |
  ForEach {
      $ofn = $_.name; $nfn= $_.Name.Replace(&quot;07202016&quot;,&quot;&quot;)
       rename-item $ofn $nfn
   }
</code></pre>
<h2 id="reactnode-update-project">React/Node update project</h2>
<p><code>yarn upgrade &amp;&amp; npx syncyarnlock --keepPrefix --save &amp;&amp; yarn install</code></p>
<h2 id="docker-for-standardnotes">Docker for standardnotes</h2>
<p><code>docker run -d -p 3001:3001 --env-file=.env.sample standardnotes/web:stable</code></p>
<p><code>docker pull standardnotes/web</code></p>
<p><code>docker pull kennethreitz/httpbin</code></p>
<p><code>docker run -p 80:80 kennethreitz/httpbin</code></p>
<h2 id="install-error">Install error</h2>
<p>Security Update for SQL Server 2019 RTM GDR (KB5014356)
Install error - 0x8024000b</p>
<h2 id="sql-server-2019">SQL Server 2019</h2>
<p>Install error - 0x8024000b</p>
<p>We have below workarounds:</p>
<p>On existing machines, where SSMS 18.3 or lower is already installed.
Uninstall SQL Server 2012 Native Client which got installed with SSMS. Then install SQL Server 2019. OR
Instead of running setup from mounted ISO, copy the content of media to a local drive or a network share and start setup.exe from those locations.</p>
<p>On new machines, where SSMS is NOT installed.
First install SQL Server 2019 and then install SSMS 18.3 OR
Install version of SSMS greater than 18.3.1 and then install SQL Server 2019</p>
<h2 id="nuget-cli">Nuget CLI</h2>
<h3 id="restore-packages-for-a-solution-file">Restore packages for a solution file</h3>
<p>nuget restore a.sln</p>
<h3 id="restore-packages-for-a-solution-file-using-msbuild-version-140-to-load-the-solution-and-its-projects">Restore packages for a solution file, using MSBuild version 14.0 to load the solution and its project(s)</h3>
<p>nuget restore a.sln -MSBuildVersion 14</p>
<h3 id="restore-packages-for-a-projects-packagesconfig-file-with-the-packages-folder-at-the-parent">Restore packages for a project’s packages.config file, with the packages folder at the parent</h3>
<p>nuget restore proj1\packages.config -PackagesDirectory ..\packages</p>
<h3 id="restore-packages-for-the-solution-in-the-current-folder-specifying-package-sources">Restore packages for the solution in the current folder, specifying package sources</h3>
<p>nuget restore -source “<a href="https://api.nuget.org/v3/index.json;https://www.myget.org/F/nuget&quot;">https://api.nuget.org/v3/index.json;https://www.myget.org/F/nuget&quot;</a></p>

            ]]>
        </content>
    </entry>
</feed>
